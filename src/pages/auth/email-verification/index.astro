---
import Button from '../../../components/Button.astro';
import Input from '../../../components/Input.astro';
import AuthLayout from '../../../layouts/AuthLayout.astro';

const user = Astro.locals.user;

if (!user) {
    return Astro.redirect("/auth/login");
}

if (user.emailVerified) {
    return new Response(JSON.stringify({ error: "Email already verified" }), {
        status: 302,
        headers: {
            Location: "/dashboard",
			"Content-Type": "application/json",
        },
    });
}

const email = user.email;
---

<AuthLayout title='Email Verification'>
    <div class="flex flex-col space-y-8">
        <p class="text-lg text-center">The verification code has been sent to <b>'{email}'</b>. Please check your email inbox or spam folder for the verification email and then type the verification code below.</p>
        <form method='post' action='/api/auth/email_verification' class='flex flex-col space-y-8'>
            <Input context='code' label='Email Verification Code' type='text' placeholder='Enter 6 digit code' required maxlength={"6"} oninput="this.value = this.value.toUpperCase()"/>
            <div id='form-error' class="p-4 bg-rose-600/30 border border-rose-600 text-rose-600 rounded-lg" style="display: none;"></div>
            <Button title='Verify' variant='secondary' />
        </form>
    </div>
</AuthLayout>

<style>
	body {
		font-family: 'Inter', sans-serif;
		font-optical-sizing: auto;
		font-weight: <weight>;
		font-style: normal;
	}
</style>

<script>
	const errorMessageElement = document.getElementById('form-error');

	document.forms[0]?.addEventListener('submit', async (e) => {
		e.preventDefault();

		if (!errorMessageElement) return;
		errorMessageElement.style.display = 'none';
		errorMessageElement.innerText = '';

		const formElement = e.target as HTMLFormElement | null;

		if (!formElement) return;
		const response = await fetch(formElement.action, {
			method: formElement.method,
			body: new FormData(formElement),
		});

		if (response.ok) {
			window.location.href = '/dashboard';
		} else {
			const result = await response.json();
			errorMessageElement.innerText = result.error || 'Unknown error occurred';
			errorMessageElement.style.display = 'block';
		}
	});
</script>
